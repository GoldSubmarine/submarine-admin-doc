(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{364:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"lombok-注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lombok-注意事项"}},[t._v("#")]),t._v(" lombok 注意事项")]),t._v(" "),s("p",[t._v("Lombok 简化了 java 又臭又长的代码，平时还使用建造者这样的写法，写起来清晰很多。但是在实际使用中也遇到不少坑，以下为注意事项")]),t._v(" "),s("h2",{attrs:{id:"建造者的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建造者的问题"}},[t._v("#")]),t._v(" 建造者的问题")]),t._v(" "),s("p",[t._v("我们都知道给实体添加 "),s("code",[t._v("@Builder")]),t._v(" 后就可以使用建造者，但如果实体发生了继承，例如继承了 "),s("code",[t._v("BaseEntity")]),t._v(" ，却无法建造 "),s("code",[t._v("BaseEntity")]),t._v(" 中的属性。于是 Lombok 推出了 "),s("code",[t._v("@SuperBuilder")]),t._v(" 注解（该注解还处于实验阶段），在父类和子类上都添加改注解，就可以一起建造父类和子类的属性。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SuperBuilder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("toBuilder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SuperBuilder")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),t._v(" c1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("builder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"名称"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"子类属性ext"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Lombok 在 1.18.2 中支持了改注解，idea 的 Lombok 插件也已支持该注解。")]),t._v(" "),s("h2",{attrs:{id:"tostring-和-equalsandhashcode-的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring-和-equalsandhashcode-的问题"}},[t._v("#")]),t._v(" ToString 和 EqualsAndHashCode 的问题")]),t._v(" "),s("p",[t._v("如果实体发生了继承，默认情况下 "),s("code",[t._v("@ToString")]),t._v(" 和 "),s("code",[t._v("@EqualsAndHashCode")]),t._v(" 都不会将父类的属性加入计算，如果要将父类属性也加入计算，可以配置 "),s("code",[t._v("callsuper")]),t._v(" 的值为 true："),s("code",[t._v("@ToString(callSuper=true)")]),t._v(" 和 "),s("code",[t._v("@EqualsAndHashCode(callSuper=true)")])]),t._v(" "),s("p",[t._v("但是每个实体都这样写太过麻烦，并且@Data 注解也失去了意义，Lombok 还支持全局统一的配置，新建 lombok.config 配置文件，加入以下信息：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stopBubbling"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nlombok"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsAndHashCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callSuper"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("call\nlombok"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callSuper"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("call\n")])])]),s("p",[s("strong",[t._v("注意：")]),t._v(" 在低版本的 Lombok 中，lombok.toString.callSuper=call 不生效，经过测试 在 1.18.8 中可以使用")]),t._v(" "),s("h2",{attrs:{id:"lombok-config-配置文件作用范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lombok-config-配置文件作用范围"}},[t._v("#")]),t._v(" lombok.config 配置文件作用范围")]),t._v(" "),s("p",[s("code",[t._v("lombok.config")]),t._v(" 配置文件只对父类目录下的所有 "),s("code",[t._v("java")]),t._v(" 文件才生效，所以在 spring 项目中，无法将配置文件放在 resource 文件夹下，建议放在项目跟路径。")]),t._v(" "),s("p",[t._v("Lombok 不仅适用于 spring 项目，它适用于所有的 java 项目，所以对作用范围进行这样的设定。")]),t._v(" "),s("h2",{attrs:{id:"配合-mapstruct-使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配合-mapstruct-使用"}},[t._v("#")]),t._v(" 配合 mapstruct 使用")]),t._v(" "),s("p",[t._v("mapstruct 提供了配合 lombok 的使用方式，即 mapstruct 生成的代码为建造者")])])}),[],!1,null,null,null);a.default=e.exports}}]);